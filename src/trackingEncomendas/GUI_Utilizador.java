package trackingEncomendas;

import blockChain.p2p.miner.InterfaceRemoteMiner;
import java.rmi.RemoteException;
import javax.swing.DefaultListModel;
import utils.RMI;

/**
 *
 * @author Eduardo Gomes a23032 e Pedro Martinho a23299
 */
public class GUI_Utilizador extends javax.swing.JFrame {

    InterfaceRemoteMiner miner;
    String user;
    
    /**
     * Creates new form GUI_Utilizador
     */
    
    public GUI_Utilizador(String user) {
        initComponents();
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbPanePrincipal = new javax.swing.JTabbedPane();
        painelServer = new javax.swing.JPanel();
        btStartServer = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        painelEncomendas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEncomendas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listHistory = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbPanePrincipal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbPanePrincipalStateChanged(evt);
            }
        });

        btStartServer.setText("Connect To Server ");
        btStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartServerActionPerformed(evt);
            }
        });

        txtAddress.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        txtAddress.setText("//10.10.209.111:10010/miner");
        txtAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Server Address"));

        javax.swing.GroupLayout painelServerLayout = new javax.swing.GroupLayout(painelServer);
        painelServer.setLayout(painelServerLayout);
        painelServerLayout.setHorizontalGroup(
            painelServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelServerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btStartServer)
                .addContainerGap())
        );
        painelServerLayout.setVerticalGroup(
            painelServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelServerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(300, Short.MAX_VALUE))
        );

        tbPanePrincipal.addTab("Server", painelServer);

        listEncomendas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEncomendasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listEncomendas);

        jScrollPane2.setViewportView(listHistory);

        jLabel1.setText("Lista de Encomendas");

        jLabel7.setText("Histórico de localização");

        javax.swing.GroupLayout painelEncomendasLayout = new javax.swing.GroupLayout(painelEncomendas);
        painelEncomendas.setLayout(painelEncomendasLayout);
        painelEncomendasLayout.setHorizontalGroup(
            painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelEncomendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addGroup(painelEncomendasLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        painelEncomendasLayout.setVerticalGroup(
            painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelEncomendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelEncomendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        tbPanePrincipal.addTab("Encomendas", painelEncomendas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbPanePrincipal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbPanePrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartServerActionPerformed
        try {
            
            //guardar endereço do remote miner
            miner = (InterfaceRemoteMiner) RMI.getRemote(txtAddress.getText());
            
            //seleceionar o painel de encomendas
            tbPanePrincipal.setSelectedComponent(painelEncomendas);
            
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_btStartServerActionPerformed

    private void listEncomendasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEncomendasValueChanged
        //se o painel de encomendas for selecionado
        if (tbPanePrincipal.getSelectedComponent() == painelEncomendas) {
            DefaultListModel model = new DefaultListModel();
            
            //guardar encomenda que e selecionado
            String id = listEncomendas.getSelectedValue().split("Encomenda n. ")[1];
            id = id.split(" : ")[0];
            try {
                
                //adicionar o historico da encomenda ao model
                model.addAll(miner.getBlockChain().getHistoricoEncomenda(Integer.parseInt(id)));
                
            } catch (RemoteException ex) {
            }
            
            //mostrar o model na lista do historico
            listHistory.setModel(model);
        }
    }//GEN-LAST:event_listEncomendasValueChanged

    private void tbPanePrincipalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbPanePrincipalStateChanged
        //se o painel de encomendas for selecionado
        if (tbPanePrincipal.getSelectedComponent() == painelEncomendas) {
        DefaultListModel model2 = new DefaultListModel();
        try {
            
            //adicionar as encomendas do user ao model
            model2.addAll(miner.getBlockChain().getUserEncomendas(user, "u"));
            
        } catch (RemoteException ex) {
        }
        
        //mostrar o model na lista de encomendas
        listEncomendas.setModel(model2);
        
        }
    }//GEN-LAST:event_tbPanePrincipalStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Utilizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Utilizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Utilizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Utilizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI_Utilizador("José").setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btStartServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listEncomendas;
    private javax.swing.JList<String> listHistory;
    private javax.swing.JPanel painelEncomendas;
    private javax.swing.JPanel painelServer;
    private javax.swing.JTabbedPane tbPanePrincipal;
    private javax.swing.JTextField txtAddress;
    // End of variables declaration//GEN-END:variables
}
